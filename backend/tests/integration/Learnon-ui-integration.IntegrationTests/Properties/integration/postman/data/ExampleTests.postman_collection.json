{
	"info": {
		"_postman_id": "fdacc310-c6b1-49a7-a1c8-a85dc54d5b63",
		"name": "ExampleTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31053654"
	},
	"item": [
		{
			"name": "exampleTestSuite",
			"item": []
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "create",
					"item": [
						{
							"name": "sucess",
							"item": [
								{
									"name": "expect that account with email 'test.test@gmail.com'  does not exist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status test\", function () {\r",
													"    postman.setNextRequest(null);\r",
													"    pm.response.to.have.status(200);\r",
													"    //postman.setNextRequest();\r",
													"});\r",
													"\r",
													"pm.test(\"Email not exists\", function() {\r",
													"    postman.setNextRequest(null);\r",
													"    pm.expect(jsonData.some(account => account.email == 'test.test@gmail.com' )).to.be.false\r",
													"     //postman.setNextRequest();\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/accounts/test/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accounts",
												"test",
												"all"
											]
										}
									},
									"response": []
								},
								{
									"name": "create account with email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"        pm.response.to.have.status(201);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "amFuLm5vd2FrQGdtYWlsLmNvbTphZG1pbg==",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"firstName\": \"testImie\",\r\n  \"lastName\": \"testNazwisko\",\r\n  \"email\": \"test.test@gmail.com\",\r\n  \"password\": \"test\",\r\n  \"repeatPassword\": \"test\",\r\n  \"birthDate\": \"2023-09-20T22:00:00.000Z\",\r\n  \"gender\": \"Nieznana\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/accounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accounts"
											]
										}
									},
									"response": []
								},
								{
									"name": "found account with email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status test\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Email exists\", function() {\r",
													"    pm.expect(jsonData.some(account => account.email == 'test.test@gmail.com' )).to.be.true\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/accounts/test/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accounts",
												"test",
												"all"
											]
										}
									},
									"response": []
								},
								{
									"name": "clear table account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/accounts/test/clear-database",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accounts",
												"test",
												"clear-database"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "failure",
							"item": [
								{
									"name": "[act] create account with not matched password [500]",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"        pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"Body contains password_not_match\", function() {\r",
													"        pm.response.body === \"Password_not_match\";\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"firstName\": \"testImie\",\r\n  \"lastName\": \"testNazwisko\",\r\n  \"email\": \"test.test@gmail.com\",\r\n  \"password\": \"test\",\r\n  \"repeatPassword\": \"Test\",\r\n  \"birthDate\": \"2023-09-20T22:00:00.000Z\",\r\n  \"gender\": \"Nieznana\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/accounts/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accounts",
												""
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "find",
					"item": [
						{
							"name": "sucess",
							"item": [
								{
									"name": "Account_Find_By_Email_When_Database_Has_Accounts_Without_Finding_Email",
									"item": [
										{
											"name": "[verify] database is empty [200]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status test\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Database (table Account) is empty\", function(){\r",
															"    pm.expect(jsonData.length).to.be.equal(0)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/test/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														"test",
														"all"
													]
												}
											},
											"response": []
										},
										{
											"name": "[arrange] create account [201]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function() {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"firstName\": \"testImie\",\r\n  \"lastName\": \"testNazwisko\",\r\n  \"email\": \"test@localhost.com\",\r\n  \"password\": \"test\",\r\n  \"repeatPassword\": \"test\",\r\n  \"birthDate\": \"2023-09-20T22:00:00.000Z\",\r\n  \"gender\": \"Nieznana\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/accounts/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "[arrange] database has one account [200]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status test\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Database (table Account) has one account\", function(){\r",
															"    pm.expect(jsonData.length).to.be.equal(1)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/test/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														"test",
														"all"
													]
												}
											},
											"response": []
										},
										{
											"name": "[act] find no existing email [204]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {\r",
															"        pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/?email=testMail@gmail.com",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														""
													],
													"query": [
														{
															"key": "email",
															"value": "testMail@gmail.com"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "[cleanup] clear table account [200]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/test/clear-database",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														"test",
														"clear-database"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Account_Find_By_Email_When_Database_Is_Empty",
									"item": [
										{
											"name": "[verify] database is empty [200]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status test\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Database (table Account) is empty\", function(){\r",
															"    pm.expect(jsonData.length).to.be.equal(0)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/test/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														"test",
														"all"
													]
												}
											},
											"response": []
										},
										{
											"name": "[act] find no existing email when database is empty [204]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function() {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/?email=testowy@gmail.com",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														""
													],
													"query": [
														{
															"key": "email",
															"value": "testowy@gmail.com"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Account_Find_By_Email_When_Database_Has_Accounts_With_Finding_Email",
									"item": [
										{
											"name": "[verify] database is empty [200]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status test\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Database (table Account) is empty\", function(){\r",
															"    pm.expect(jsonData.length).to.be.equal(0)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/test/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														"test",
														"all"
													]
												}
											},
											"response": []
										},
										{
											"name": "[arrange] create account [201]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function(){\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"firstName\": \"testImie\",\r\n  \"lastName\": \"testNazwisko\",\r\n  \"email\": \"test@gmail.com\",\r\n  \"password\": \"test\",\r\n  \"repeatPassword\": \"test\",\r\n  \"birthDate\": \"2023-09-20T22:00:00.000Z\",\r\n  \"gender\": \"Nieznana\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/accounts/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "[arrange] database has one account [200]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status test\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Database (table Account) has one account\", function(){\r",
															"    pm.expect(jsonData.length).to.be.equal(1)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/test/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														"test",
														"all"
													]
												}
											},
											"response": []
										},
										{
											"name": "[act] found account with email [200]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status test\", function () {\r",
															"        pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Email exists\", function() {\r",
															"    pm.expect(jsonData.some(account => account.email == 'test@gmail.com' )).to.be.true\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/test/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														"test",
														"all"
													]
												}
											},
											"response": []
										},
										{
											"name": "[cleanup] clear table account [200]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/test/clear-database",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														"test",
														"clear-database"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "update",
					"item": [
						{
							"name": "sucess",
							"item": [
								{
									"name": "verify database is empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Database (table Account) is empty\", function() {\r",
													"    pm.expect(jsonData.length).to.be.equal(0)\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/accounts/test/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accounts",
												"test",
												"all"
											]
										}
									},
									"response": []
								},
								{
									"name": "create account with email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"firstName\": \"testImie\",\r\n  \"lastName\": \"testNazwisko\",\r\n  \"email\": \"test.test@gmail.com\",\r\n  \"password\": \"test\",\r\n  \"repeatPassword\": \"test\",\r\n  \"birthDate\": \"2023-09-20T22:00:00.000Z\",\r\n  \"gender\": \"Nieznana\"\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/accounts/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accounts",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "found account with email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status test\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Email exists\", function() {\r",
													"    pm.expect(jsonData.some(account => account.email == 'test.test@gmail.com' )).to.be.true\r",
													"});\r",
													"\r",
													"postman.setEnvironmentVariable(\"accountId\", jsonData[0].id);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/accounts/test/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accounts",
												"test",
												"all"
											]
										}
									},
									"response": []
								},
								{
									"name": "change password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status test\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"postman.clearEnvironmentVariable(\"accountId\");\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": {{accountId}},\r\n  \"oldPassword\": \"test\",\r\n  \"newPassword\": \"newtest\",\r\n  \"repeatNewPassword\": \"newtest\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/accounts/{{accountId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accounts",
												"{{accountId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "fetch account with new password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status test\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Account has new password\", function() {\r",
													"    pm.expect(jsonData.find(account => account.email == 'test.test@gmail.com')?.password).to.be.equal(\"newtest\")\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/accounts/test/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accounts",
												"test",
												"all"
											]
										}
									},
									"response": []
								},
								{
									"name": "clear table account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status test\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/accounts/test/clear-database",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"accounts",
												"test",
												"clear-database"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "sucess",
							"item": [
								{
									"name": "Happy_Path_Delete_Account",
									"item": [
										{
											"name": "[verify] database is empty [200]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status test\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Database (table Account) is empty\", function(){\r",
															"    pm.expect(jsonData.length).to.be.equal(0)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/test/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														"test",
														"all"
													]
												}
											},
											"response": []
										},
										{
											"name": "[arrange] create first account [201]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function() {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"firstName\": \"testImie\",\r\n  \"lastName\": \"testNazwisko\",\r\n  \"email\": \"test@localhost.com\",\r\n  \"password\": \"test\",\r\n  \"repeatPassword\": \"test\",\r\n  \"birthDate\": \"2023-09-20T22:00:00.000Z\",\r\n  \"gender\": \"Nieznana\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/accounts/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "[arrange] create second account [201]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function() {\r",
															"    pm.response.to.have.status(201);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"firstName\": \"Marek\",\r\n  \"lastName\": \"Nowak\",\r\n  \"email\": \"marek.nowak@gmail.com\",\r\n  \"password\": \"nowak\",\r\n  \"repeatPassword\": \"nowak\",\r\n  \"birthDate\": \"1990-09-20T22:00:00.000Z\",\r\n  \"gender\": \"Nieznana\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/accounts/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														""
													]
												}
											},
											"response": []
										},
										{
											"name": "[arrange] database has two accounts [200]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status test\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Database (table Account) has two accounts\", function(){\r",
															"    pm.expect(jsonData.length).to.be.equal(2)\r",
															"});\r",
															"\r",
															"pm.test(\"Database (table Account) has accounts with emails: ['test@localhost.com','marek.nowak@gmail.com']\", function(){\r",
															"    ['test@localhost.com','marek.nowak@gmail.com'].forEach(email=>{\r",
															"        pm.expect(jsonData.some(account => account.email === email)).to.be.true\r",
															"    });  \r",
															"\r",
															"//the same as above in old style\r",
															"    for (let email of ['test@localhost.com','marek.nowak@gmail.com'])\r",
															"    {\r",
															"        pm.expect(jsonData.some(account => account.email === email)).to.be.true\r",
															"    } \r",
															"});\r",
															"\r",
															"postman.setEnvironmentVariable(\"accountId\", jsonData.find(account => account.email === 'test@localhost.com').id);\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/test/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														"test",
														"all"
													]
												}
											},
											"response": []
										},
										{
											"name": "[act] delete account with email test@localhost.com",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"postman.clearEnvironmentVariable(\"accountId\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/{{accountId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														"{{accountId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "[arrange] database has one account with email marek.nowak@gmail.com [200]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status test\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Database (table Account) has one account with email marek.nowak@gmail.com\", function(){\r",
															"    pm.expect(jsonData.length).to.be.equal(1);\r",
															"    pm.expect(jsonData.some(account => account.email === 'marek.nowak@gmail.com')).to.be.true\r",
															"});\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/test/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														"test",
														"all"
													]
												}
											},
											"response": []
										},
										{
											"name": "[cleanup] clear table account [200]",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status test\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/accounts/test/clear-database",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts",
														"test",
														"clear-database"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				}
			]
		}
	]
}